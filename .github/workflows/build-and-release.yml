name: Build and Release

on:
  push:
    tags:
      - '*'

jobs:
  build:
    runs-on: ${{ matrix.macos }}
    strategy:
      fail-fast: false
      matrix:
        macos: ['macos-12']
        xcode: ['14.1.0']
        command: ['build']
        scheme: ['StellarCLI']
        destination: ['platform=macOS']
    steps:
      - name: Switch xcode to ${{ matrix.xcode }}
        run: sudo xcode-select -s /Applications/Xcode_${{ matrix.xcode }}.app/Contents/Developer
      - name: Show macOS version (${{ matrix.macos }})
        run: sw_vers
      - name: Code Checkout
        uses: actions/checkout@v2
      - name: Check xcodebuild version
        run: xcodebuild -version
      - name: Check xcode embedded SDKs
        run: xcodebuild -showsdks
      - name: Show buildable schemes
        working-directory: ./Stellar
        run: xcodebuild -list
      - name: Show eligible build destinations for ${{ matrix.scheme }}
        working-directory: ./Stellar
        run: xcodebuild -showdestinations -scheme ${{ matrix.scheme }}
      - name: Run command ${{ matrix.command }} on ${{ matrix.scheme }} for destination ${{ matrix.destination }}
        working-directory: ./Stellar
        run: xcodebuild ${{ matrix.command }} -scheme ${{ matrix.scheme }} -destination "${{ matrix.destination }}"
      - name: Archive using ${{ matrix.scheme }} for destination ${{ matrix.destination }}
        working-directory: ./Stellar
        run: swift build -c release --arch arm64 --arch x86
      - name: Copy Templates.bundle
        working-directory: ./Stellar
        run: cp -r Sources/Core/Resources/Templates.bundle .build/apple/Products/Release/
      - name: Zip executable
        working-directory: ./Stellar/.build/apple/Products/Release/
        run: zip -r StellarCLI.zip StellarCLI Templates.bundle
      - name: Create Release
        uses: actions/create-release@v1
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: true
      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./Stellar/.build/apple/Products/Release/StellarCLI.zip
          asset_name: StellarCLI.zip
          asset_content_type: application/zip
